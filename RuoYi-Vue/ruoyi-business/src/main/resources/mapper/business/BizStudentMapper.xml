<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.business.mapper.BizStudentMapper">
    
    <resultMap type="BizStudent" id="BizStudentResult">
        <result property="studentId"    column="student_id"    />
        <result property="userId"    column="user_id"    />
        <result property="schoolId"    column="school_id"    />
        <result property="studentNo"    column="student_no"    />
        <result property="entryYear"    column="entry_year"    />
        <result property="classCode"    column="class_code"    />
    </resultMap>

    <sql id="selectBizStudentVo">
        select student_id, user_id, school_id, student_no, entry_year, class_code from biz_student
    </sql>

    <select id="selectBizStudentList" parameterType="BizStudent" resultMap="BizStudentResult">
        <include refid="selectBizStudentVo"/>
        <where>  
            <if test="userId != null "> and user_id = #{userId}</if>
            <if test="schoolId != null "> and school_id = #{schoolId}</if>
            <if test="studentName != null  and studentName != ''">
                AND student_name like concat('%', #{studentName}, '%')
            </if>
            <if test="studentNo != null  and studentNo != ''"> and student_no = #{studentNo}</if>
            <if test="entryYear != null  and entryYear != ''"> and entry_year = #{entryYear}</if>
            <if test="classCode != null  and classCode != ''"> and class_code = #{classCode}</if>
        </where>
    </select>
    
    <select id="selectBizStudentByStudentId" parameterType="Long" resultMap="BizStudentResult">
        <include refid="selectBizStudentVo"/>
        where student_id = #{studentId}
    </select>

    <insert id="insertBizStudent" parameterType="BizStudent" useGeneratedKeys="true" keyProperty="studentId">
        insert into biz_student
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">user_id,</if>
            <if test="schoolId != null">school_id,</if>
            <if test="studentNo != null">student_no,</if>
            <if test="entryYear != null">entry_year,</if>
            <if test="classCode != null">class_code,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">#{userId},</if>
            <if test="schoolId != null">#{schoolId},</if>
            <if test="studentNo != null">#{studentNo},</if>
            <if test="entryYear != null">#{entryYear},</if>
            <if test="classCode != null">#{classCode},</if>
         </trim>
    </insert>

    <update id="updateBizStudent" parameterType="BizStudent">
        update biz_student
        <trim prefix="SET" suffixOverrides=",">
            <if test="userId != null">user_id = #{userId},</if>
            <if test="schoolId != null">school_id = #{schoolId},</if>
            <if test="studentNo != null">student_no = #{studentNo},</if>
            <if test="entryYear != null">entry_year = #{entryYear},</if>
            <if test="classCode != null">class_code = #{classCode},</if>
        </trim>
        where student_id = #{studentId}
    </update>

    <delete id="deleteBizStudentByStudentId" parameterType="Long">
        delete from biz_student where student_id = #{studentId}
    </delete>

    <delete id="deleteBizStudentByStudentIds" parameterType="String">
        delete from biz_student where student_id in 
        <foreach item="studentId" collection="array" open="(" separator="," close=")">
            #{studentId}
        </foreach>
    </delete>
</mapper>